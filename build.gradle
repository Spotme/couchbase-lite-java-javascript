buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.8.+'
    }
}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

repositories {
    maven { url 'http://files.couchbase.com/maven2/' }
    mavenLocal()
    mavenCentral()
}

// apply from: 'dependencies-archive.gradle'    // <- enable this when building an .aar
apply from: 'dependencies-test.gradle'       // <- enable this when testing


task createMavenDirectory(type: Exec) {

    ext {
        uploadUser = System.getenv("UPLOAD_USERNAME") + ":" + System.getenv("UPLOAD_PASSWORD")
        mkcolPath = System.getenv("UPLOAD_MAVEN_REPO_URL") + "com/couchbase/cblite/CBLiteJavascript/" + System.getenv("UPLOAD_VERSION_CBLITE_JAVASCRIPT") + "/"
    }
    commandLine "curl", "--user", uploadUser, "-X", "MKCOL", mkcolPath
}

// this hack is only needed for apache mod_dav based Maven repo's like file.couchbase.com.  otherwise, skip it
createMavenDirectory.onlyIf { System.getenv("UPLOAD_MAVEN_REPO_URL").contains("files") }

task uploadArchivesWrapper(dependsOn: createMavenDirectory) << {
    uploadArchives.execute()
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: System.getenv("UPLOAD_MAVEN_REPO_URL")) {
                authentication(userName: System.getenv("UPLOAD_USERNAME"), password: System.getenv("UPLOAD_PASSWORD"))
            }
            pom.version = System.getenv("UPLOAD_VERSION_CBLITE_JAVASCRIPT")  // eg, 0.7.2
            pom.groupId = 'com.couchbase.cblite'
            pom.artifactId = 'CBLiteJavascript'
            pom.project {
                licenses {
                    license {
                        name 'Couchbase Community Edition License Agreement'
                        url 'http://www.couchbase.com/agreement/community'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

